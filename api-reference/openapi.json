{
  "openapi": "3.1.0",
  "info": {
    "title": "Nimbus BCI API",
    "description": "Nimbus API for Brain-Computer Interface authentication, licensing, and model registry",
    "license": {
      "name": "MIT"
    },
    "version": "2.0.1"
  },
  "servers": [
    {
      "url": "https://api.nimbusbci.com",
      "description": "Production API"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Model identifier"
          },
          "name": {
            "type": "string",
            "description": "Model name"
          },
          "type": {
            "type": "string",
            "enum": ["rxlda", "rxgmm"],
            "description": "Model type"
          },
          "version": {
            "type": "string",
            "description": "Model version"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        }
      },
      "InferenceResult": {
        "type": "object",
        "properties": {
          "prediction": {
            "type": "integer",
            "description": "Predicted class"
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Prediction confidence"
          },
          "probabilities": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Class probabilities"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    }
  },
  "paths": {
    "/auth/validate": {
      "post": {
        "summary": "Validate API key",
        "description": "Validates the provided API key and returns license information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "type": "string",
                    "description": "API key to validate"
                  }
                },
                "required": ["api_key"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "example": true
                    },
                    "tier": {
                      "type": "string",
                      "enum": ["free", "research", "commercial", "enterprise"]
                    },
                    "quota_remaining": {
                      "type": "integer",
                      "description": "Remaining monthly quota"
                    },
                    "models": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Available models for this license tier"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "summary": "List available models",
        "description": "Returns all available pre-trained models",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["rxlda", "rxgmm"]
            },
            "description": "Filter by model type"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Model"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models/{modelId}": {
      "get": {
        "summary": "Get model details",
        "description": "Returns detailed information about a specific model",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Model details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Model"
                }
              }
            }
          },
          "404": {
            "description": "Model not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "API health check",
        "description": "Returns API status and version information",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "version": {
                      "type": "string",
                      "example": "2.0.1"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}